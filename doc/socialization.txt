Localization and other type of Build-based/Source-code socialization to JetPack codes and maybe means for JetPacks to talk each other.  The localization is an interesting case where a JetPack should be able to incorporate the benefit of a possible contribution by an user. As an example, the build/update state of a JetPack ( Update events in the gallery for eample ) could be associated with events from end-users. So, would be possible and user ( real end-user ) to add a chunk of data, as in a JSON, and that JSON to be an assciated resource that could eventually impact the execution/runtime/UI experience of a JetPack.  To make sure a resource can impact positivelly the lifetime of a jetpack, it would be necessary to have some security mechanisms. 

The JetPack 

Would define that uses an external recource ID: X. 

and any other person could replace that resource X with other Y 

The JetPack + Y becomes a new UUID identity in a repository system. This would be a compound Jetpack in a way. localization would be possible to gain ocntributions using that model . Thn the JETPACK + Y was tested by large, the original authoer of JETPACK + X could incorporate JETPACK + X + Y - so the full recyling flow happens


