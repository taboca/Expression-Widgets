== Note - March Review ==

* Influence/princiaple - Access to Service and Trust - Access = leverages the existing personal user browser experience; Service = Team-based conventions to function as a mesh network between participants. Their interactions becomes the web service. Trust = Construction of a trusted social artifact - the generated content can then be reviewed by peers to become an artifact that can be used by others.


* Marcio - The main issue in this project refers to how to publish and organize information from session participants without the requirement if a server system install or specific system with learning curve. The end repository must be something that is acceptable by the participants culture or really transparent at a point that the discussion is the topic and not the system .

* Armando Neto - ICMC/USP -  RSS future, publish subscribe models, Salmon Protocol http://www.salmon-protocol.org/, and Google http://code.google.com/p/pubsubhubbub/. Armando also talked about Raindrop a few days ago and I will also investigate if Raindrop can become a local server host. One possible option here is to come up with a local server app that goes at the level of the intranet, let's say a class, and where participants can attach too. The final production may become a mix of data and events that can then be dispatched against a repository and eventually become online documentation or applications.

* Felipe/Marcio - Bring the concept of a meeting host peer that serves as a place where students can agregate their data around. The host peer keeps the social subject of the session> The end subject can then be posted to a wiki page or to other type of repository such as a version control system or even publish to an intranet wiki or document repository. This host peer can be any partitipant or even the educator if there is interest. We have to watch out to not create a layer and loose the value of the project as it aims to minimize governance and educator's need to learn technical details of a new system.

* Socket stuff - WebSocket, HTTPd server, https://bugzilla.mozilla.org/show_bug.cgi?id=472529 is the work that Wellington did as a summer of code for Mozilla. This is a WebSocket implementation that is subject to get in the trunk. Wellington also mentioned http://code.google.com/p/pywebsocket/ and a hack patch he did on top of httpd.js to have some WebSocket tests going. https://bugzilla.mozilla.org/show_bug.cgi?id=546616. Mozilla also has this HTTP server for tests - https://developer.mozilla.org/En/Httpd.js/HTTP_server_for_unit_tests and Darin had the previous reference on the server socket listener a very simple HTTP content server test - http://mxr.mozilla.org/mozilla-central/source/netwerk/test/TestServ.js?raw=1

