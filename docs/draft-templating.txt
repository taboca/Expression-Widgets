Draft Note

<h2>Analysis of Jetpack-based Applications and Code Development</h2>

During the Jetpack for Learning Design Challenge classes it was presented a few scenarios of code development. Most of the Jetpack-based applications are implemented using one JavaScript file that represents the whole application. The application itself uses various types of resources but they can basically be placed locally in the same source-code, using some inline coding, or be remotelly hosted. 

<h2>Challenge</h2>

No way to see bring additional resources as part of a Jetpack application. 

<h2>Solution</h2>

<ul>
<li>Possible - Dynamically load resources from remote locations - possible using built in XMLHTTPRequest of jQuery functions</li>
<li>Possible - Bring inline data that can contain resources defined using any open-based format being XML, JavaScript, JSON, RSS, SVG, or even binary formats using PNG.</li>
<li>Not possible - Bring a resource that is both shipped with the Jetpack-based extension and at the same time can be replaced. We need to check how the Reboot platform is addressing localization.</li>
<li>Not possible - Some way to access the scope/space of resources of another Jepack. One possible approach for a Jetpack to load resources would be a Jetpack to be able to access data from another Jetpack. Then an aggregated Jetpack-based app could eventually be a bundle of multiple Jetpack-based resources with different manifest information associated with it. </li>

</ul>

<h2>Other</h2>

Jetpacks are great ways to extend the browsing experience with a more lightweight and dynamic extension system. This state of creation creates new possibilities for the development of web applications. A new world of web-service connected extensions could be deployed. In this sense, an end-user should be able to mash patterns of user experience with web services and deploy new experiences. Just like jQuery is the perfect almost templating way to query and modify thngs in the DOM a templating system could also be added to the infra-struture and serve as a way for new UI/User Experiences to be deployed based on very simple and statements and rules. 

End users could create Jetpacks by just mixing resources, web-remote resources, with structured User Interface interaction elements. 

== Templates in JetPack ==

* http://decafbad.com/blog/2008/09/01/writing-a-delicious-command-for-ubiquity

